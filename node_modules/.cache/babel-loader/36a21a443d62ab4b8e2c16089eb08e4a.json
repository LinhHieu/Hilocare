{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hilo\\\\hilocare\\\\src\\\\app\\\\components\\\\context\\\\auth_context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst getRemainingtime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpiration = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpiration - currentTime;\n  return remainingDuration;\n};\n\nconst getStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationTime = localStorage.getItem('expirationTime');\n  const RemainingTime = getRemainingtime(storedExpirationTime);\n\n  if (RemainingTime <= 60000) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: RemainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = getStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n    const remainingTime = getRemainingtime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"Lh1CfGbFk5nTLZoGW/pEiX6CFRc=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["D:/Hilo/hilocare/src/app/components/context/auth_context.js"],"names":["React","useState","useEffect","useCallback","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","getRemainingtime","expirationTime","currentTime","Date","getTime","adjExpiration","remainingDuration","getStoredToken","storedToken","localStorage","getItem","storedExpirationTime","RemainingTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","remainingTime","setTimeout","console","log","contextValue","children"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    login: (token) => {}, \r\n    logout: () => {}\r\n})\r\n\r\nconst getRemainingtime = (expirationTime) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpiration = new Date(expirationTime).getTime();\r\n\r\n    const remainingDuration = adjExpiration - currentTime;\r\n    return remainingDuration;\r\n}\r\n\r\nconst getStoredToken = () => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedExpirationTime = localStorage.getItem('expirationTime');\r\n\r\n    const RemainingTime = getRemainingtime(storedExpirationTime);\r\n\r\n    if(RemainingTime <= 60000){\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTime');\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        token: storedToken,\r\n        duration: RemainingTime\r\n    };\r\n}\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const tokenData = getStoredToken();\r\n    let initialToken;\r\n    if(tokenData){\r\n        initialToken = tokenData.token;\r\n    }\r\n     \r\n    const [token, setToken] = useState(initialToken);\r\n\r\n    const userIsLoggedIn = !!token;\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        setToken(null);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTime')\r\n\r\n        if(logoutTimer) {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }, []);\r\n\r\n    const loginHandler = (token, expirationTime) => {\r\n        setToken(token);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('expirationTime', expirationTime);\r\n\r\n        const remainingTime = getRemainingtime(expirationTime)\r\n        logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(tokenData){\r\n            console.log(tokenData.duration);\r\n            logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n        }\r\n    }, [tokenData, logoutHandler])\r\n\r\n    const contextValue ={\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler\r\n    }\r\n\r\n    return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>\r\n}\r\n\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}