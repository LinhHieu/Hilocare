[{"D:\\Hilo\\hilocare\\src\\index.js":"1","D:\\Hilo\\hilocare\\src\\reportWebVitals.js":"2","D:\\Hilo\\hilocare\\src\\app\\App.js":"3","D:\\Hilo\\hilocare\\src\\app\\components\\context\\auth_context.js":"4","D:\\Hilo\\hilocare\\src\\app\\components\\Main\\Home.js":"5","D:\\Hilo\\hilocare\\src\\app\\components\\profile\\UserProfile.js":"6","D:\\Hilo\\hilocare\\src\\app\\components\\Login\\Login.js":"7","D:\\Hilo\\hilocare\\src\\app\\components\\Layout\\Layout.js":"8","D:\\Hilo\\hilocare\\src\\app\\components\\Medical\\MedicalCreate\\MedicalCreate.js":"9","D:\\Hilo\\hilocare\\src\\app\\components\\Medical\\MedicalInfo.js":"10","D:\\Hilo\\hilocare\\src\\app\\components\\company\\CompanyCreate\\CompanyCreate.js":"11","D:\\Hilo\\hilocare\\src\\app\\components\\company\\CompanyList.js":"12","D:\\Hilo\\hilocare\\src\\app\\components\\Permission\\Permission.js":"13","D:\\Hilo\\hilocare\\src\\app\\components\\ExaminationSchedule\\ScheduleList.js":"14","D:\\Hilo\\hilocare\\src\\app\\components\\account\\AccountList\\AccountList.js":"15","D:\\Hilo\\hilocare\\src\\app\\components\\account\\AccountInfo\\AccountInfo.js":"16","D:\\Hilo\\hilocare\\src\\app\\components\\account\\AccountList\\AccountChangeForm\\AccountInfoChange.js":"17","D:\\Hilo\\hilocare\\src\\app\\components\\Layout\\MainNavigation.js":"18","D:\\Hilo\\hilocare\\src\\app\\components\\profile\\ProfileForm.js":"19","D:\\Hilo\\hilocare\\src\\app\\components\\account\\AccountList\\AccountTable.js":"20","D:\\Hilo\\hilocare\\src\\app\\components\\Layout\\SidebarData.js":"21","D:\\Hilo\\hilocare\\src\\app\\components\\Layout\\SubMenu.js":"22","D:\\Hilo\\hilocare\\src\\app\\components\\account\\AccountList\\AccountChangeForm\\AccountChangeForm.js":"23"},{"size":716,"mtime":1632188429800,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1632188429800,"results":"26","hashOfConfig":"25"},{"size":4759,"mtime":1632188429789,"results":"27","hashOfConfig":"25"},{"size":2339,"mtime":1632188429798,"results":"28","hashOfConfig":"25"},{"size":291,"mtime":1632188429792,"results":"29","hashOfConfig":"25"},{"size":347,"mtime":1632188429799,"results":"30","hashOfConfig":"25"},{"size":4249,"mtime":1632188429792,"results":"31","hashOfConfig":"25"},{"size":337,"mtime":1632188429790,"results":"32","hashOfConfig":"25"},{"size":3014,"mtime":1633070457659,"results":"33","hashOfConfig":"25"},{"size":359,"mtime":1632188429794,"results":"34","hashOfConfig":"25"},{"size":5679,"mtime":1632189403960,"results":"35","hashOfConfig":"25"},{"size":5540,"mtime":1632188429798,"results":"36","hashOfConfig":"25"},{"size":302,"mtime":1632188429794,"results":"37","hashOfConfig":"25"},{"size":310,"mtime":1632188429790,"results":"38","hashOfConfig":"25"},{"size":5785,"mtime":1632294299485,"results":"39","hashOfConfig":"25"},{"size":2197,"mtime":1632188429795,"results":"40","hashOfConfig":"25"},{"size":903,"mtime":1632188429796,"results":"41","hashOfConfig":"25"},{"size":1688,"mtime":1632188429791,"results":"42","hashOfConfig":"25"},{"size":2729,"mtime":1632188429799,"results":"43","hashOfConfig":"25"},{"size":2762,"mtime":1632188429797,"results":"44","hashOfConfig":"25"},{"size":2319,"mtime":1632188429791,"results":"45","hashOfConfig":"25"},{"size":1141,"mtime":1632188429791,"results":"46","hashOfConfig":"25"},{"size":3085,"mtime":1632188429795,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"1iro08d",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"51"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"51"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"51"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"51"},"D:\\Hilo\\hilocare\\src\\index.js",["111"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport AuthContext, { AuthContextProvider } from './app/components/context/auth_context';\r\n\r\nReactDOM.render(\r\n  <AuthContextProvider>\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n  </AuthContextProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["112","113"],"D:\\Hilo\\hilocare\\src\\reportWebVitals.js",[],"D:\\Hilo\\hilocare\\src\\app\\App.js",["114"],"import classes from './App.module.css';\r\nimport Login from './components/Login/Login';\r\nimport Home from './components/Main/Home';\r\nimport UserProfile from'./components/profile/UserProfile';\r\nimport React, {useState, useContext} from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport AuthContext from './components/context/auth_context';\r\nimport Layout from './components/Layout/Layout';\r\nimport AccountList from './components/account/AccountList/AccountList';\r\nimport AccountInfo from './components/account/AccountInfo/AccountInfo';\r\nimport AccountInfoChange from './components/account/AccountList/AccountChangeForm/AccountInfoChange';\r\nimport MedicalInfo from './components/Medical/MedicalInfo';\r\nimport MedicalCreate from './components/Medical/MedicalCreate/MedicalCreate';\r\nimport Permission from './components/Permission/Permission';\r\nimport ScheduleList from './components/ExaminationSchedule/ScheduleList';\r\nimport CompanyCreate from './components/company/CompanyCreate/CompanyCreate';\r\nimport CompanyList from './components/company/CompanyList';\r\n\r\n\r\nconst App = () =>{\r\n  const authen = useContext(AuthContext)\r\n  const [sidebar, setSidebar] = useState('open');\r\n  const showSidebar = () => setSidebar('open');\r\n  const hideSidebar = () => setSidebar('close');\r\n\r\n    return (\r\n        \r\n        <Switch>\r\n          <Route path='/' exact>\r\n          {authen.isLoggedIn && <Layout sidebar={sidebar} openclick={showSidebar} hideclick={hideSidebar}><Home sidebar={sidebar}/></Layout>}\r\n          {!authen.isLoggedIn && <Redirect to='/Login' />}\r\n          </Route>\r\n          \r\n          {!authen.isLoggedIn &&(\r\n          <Route path='/Login'>\r\n            <Login />\r\n          </Route>\r\n          )}\r\n          \r\n          <Route path='/Profile'>\r\n          {authen.isLoggedIn && <Layout sidebar={sidebar} openclick={showSidebar} hideclick={hideSidebar}><UserProfile sidebar={sidebar}/></Layout>}\r\n          {!authen.isLoggedIn && <Redirect to='/Login' />}\r\n          </Route>\r\n          \r\n          <Route path='/AccountList'>\r\n          {authen.isLoggedIn && <Layout sidebar={sidebar} openclick={showSidebar} hideclick={hideSidebar}><AccountList sidebar={sidebar}/></Layout>}\r\n          {!authen.isLoggedIn && <Redirect to='/Login' />}\r\n          </Route>\r\n          <Route path='/AccountInfo'>\r\n          {authen.isLoggedIn && <Layout sidebar={sidebar} openclick={showSidebar} hideclick={hideSidebar}><AccountInfo sidebar={sidebar}/></Layout>}\r\n          {!authen.isLoggedIn && <Redirect to='/Login' />}\r\n          </Route>\r\n          <Route path='/AccountInfoChange'>\r\n          {authen.isLoggedIn && <Layout sidebar={sidebar} openclick={showSidebar} hideclick={hideSidebar}><AccountInfoChange sidebar={sidebar}/></Layout>}\r\n          {!authen.isLoggedIn && <Redirect to='/Login' />}\r\n          </Route>\r\n\r\n          <Route path='/MedicalInfo'>\r\n          {authen.isLoggedIn && <Layout sidebar={sidebar} openclick={showSidebar} hideclick={hideSidebar}><MedicalInfo sidebar={sidebar}/></Layout>}\r\n          {!authen.isLoggedIn && <Redirect to='/Login' />}\r\n          </Route>\r\n\r\n          <Route path='/MedicalCreate'>\r\n          {authen.isLoggedIn && <Layout sidebar={sidebar} openclick={showSidebar} hideclick={hideSidebar}><MedicalCreate sidebar={sidebar}/></Layout>}\r\n          {!authen.isLoggedIn && <Redirect to='/Login' />}\r\n          </Route>\r\n\r\n          <Route path='/GetRole'>\r\n          {authen.isLoggedIn && <Layout sidebar={sidebar} openclick={showSidebar} hideclick={hideSidebar}><Permission sidebar={sidebar}/></Layout>}\r\n          {!authen.isLoggedIn && <Redirect to='/Login' />}\r\n          </Route>\r\n          \r\n          <Route path='/ScheduleList'>\r\n          {authen.isLoggedIn && <Layout sidebar={sidebar} openclick={showSidebar} hideclick={hideSidebar}><ScheduleList sidebar={sidebar}/></Layout>}\r\n          {!authen.isLoggedIn && <Redirect to='/Login' />}\r\n          </Route>\r\n\r\n          <Route path='/CompanyCreate'>\r\n          {authen.isLoggedIn && <Layout sidebar={sidebar} openclick={showSidebar} hideclick={hideSidebar}><CompanyCreate sidebar={sidebar}/></Layout>}\r\n          {!authen.isLoggedIn && <Redirect to='/Login' />}\r\n          </Route>\r\n\r\n          <Route path='/CompanyList'>\r\n          {authen.isLoggedIn && <Layout sidebar={sidebar} openclick={showSidebar} hideclick={hideSidebar}><CompanyList sidebar={sidebar}/></Layout>}\r\n          {!authen.isLoggedIn && <Redirect to='/Login' />}\r\n          </Route>\r\n\r\n          {!authen.isLoggedIn ? (\r\n            <Redirect to='/Login'></Redirect>\r\n          ) : <Redirect to='/'></Redirect>}\r\n\r\n\r\n          <Route path='/*'>\r\n            <Redirect to='/Login' />\r\n          </Route>\r\n        </Switch>\r\n  );\r\n  \r\n}\r\n\r\nexport default App;\r\n","D:\\Hilo\\hilocare\\src\\app\\components\\context\\auth_context.js",[],"D:\\Hilo\\hilocare\\src\\app\\components\\Main\\Home.js",[],"D:\\Hilo\\hilocare\\src\\app\\components\\profile\\UserProfile.js",["115"],"import ProfileForm from './ProfileForm';\r\nimport classes from './UserProfile.module.css';\r\nimport Layout from '../Layout/Layout';\r\n\r\nconst UserProfile = () => {\r\n  return (\r\n    \r\n    <section className={classes.profile}>\r\n      <h3>Thay mật khẩu</h3>\r\n      <ProfileForm />\r\n      \r\n    </section>\r\n\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","D:\\Hilo\\hilocare\\src\\app\\components\\Login\\Login.js",["116","117","118","119"],"import classes from './Login.module.css';\r\nimport React, { useState, useRef, useEffect, useContext} from 'react';\r\nimport classes2 from '../../App.module.css';\r\nimport AuthContext from '../context/auth_context';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst Login = (props) => {\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const authen = useContext(AuthContext);\r\n    const userNameInput = useRef();\r\n    const userPasswordInput = useRef();\r\n    const [isLogin, setIsLogin] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const switchAuthModeHandler = () => {\r\n      setIsLogin((prevState) => !prevState);\r\n    };\r\n\r\n    const registerInfo = (event) => {\r\n      event.preventDefault();\r\n      const username = userNameInput.current.value;\r\n      const password = userPasswordInput.current.value;\r\n      setIsLoading(true);\r\n      if(isLogin) {\r\n        fetch('https://uathilocare.hilo.com.vn/api/Authentication/getToken',\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            userName: username,\r\n            userPassword: password,\r\n            taxCode: \"string\",\r\n            userType: 0\r\n          }),\r\n          headers :{\r\n            'Content-Type': 'application/json',\r\n            'Language' : 'vn'\r\n          }\r\n        }).then((res) =>{\r\n          setIsLoading(false);\r\n          if(res.ok) {\r\n            return res.json()\r\n          } else {\r\n            return res.json().then((data)=>{\r\n              let errorMessage = data.message;\r\n              throw new Error(errorMessage)\r\n            }); \r\n          }\r\n        }).then((data) =>{\r\n          if(data.code == \"200\") {\r\n            const expirationTime = new Date((new Date().getTime() + (3600 * 1000)));\r\n            authen.login(data.data.token, expirationTime.toISOString());\r\n            history.replace('/');\r\n          }\r\n          else{\r\n            alert(data.message);\r\n          }\r\n          //history.replace('/');\r\n        }).catch((err) =>{\r\n          alert(err.message);\r\n        })\r\n      } \r\n      else {\r\n        fetch('https://uathilocare.hilo.com.vn/api/Authentication/register',\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            userName: username,\r\n            userPassword: password,\r\n          }),\r\n          headers :{\r\n            'Content-Type': 'application/json',\r\n            'Language' : 'vn'\r\n          }\r\n        }).then((res) =>{\r\n          setIsLoading(false);\r\n          if(res.ok) {\r\n            return res.json()\r\n          } else {\r\n            return res.json().then((data)=>{\r\n              let errorMessage = data.message;\r\n              throw new Error(errorMessage)\r\n            }); \r\n          }\r\n        }).then((data) =>{\r\n          if(data.code == \"200\") {\r\n            const expirationTime = new Date((new Date().getTime() + (3600 * 1000)));\r\n            authen.login(data.data.token, expirationTime.toISOString());\r\n            history.replace('/');\r\n          }\r\n          else{\r\n            alert(data.message);\r\n          }\r\n        }).catch((err) =>{\r\n          alert(err.message);\r\n        })\r\n      }\r\n    }\r\n  \r\n      return (\r\n        <div className={classes.auth}>\r\n          <form onSubmit={registerInfo}>\r\n            <div className={classes.control}>\r\n              <label htmlFor='text'>Tên đăng nhập</label>\r\n              <input type='text' id='text' required ref={userNameInput}/>\r\n            </div>\r\n            <div className={classes.control}>\r\n              <label htmlFor='password'>Mật khẩu</label>\r\n              <input type='password' id='password' required ref={userPasswordInput}/>\r\n            </div>\r\n            <div className={classes.actions}>\r\n              {!isLoading &&<button>{isLogin ? 'Đăng nhập' : 'Tạo tài khoản'}</button>}\r\n              {isLoading && <p>đang tải</p>}\r\n              <button\r\n                type='button'\r\n                className={classes.toggle}\r\n                onClick={switchAuthModeHandler}\r\n              >\r\n                {isLogin ? 'Tạo tài khoản mới' : 'Đăng nhập với tài khoản đã có'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n\r\n\r\nexport default Login;","D:\\Hilo\\hilocare\\src\\app\\components\\Layout\\Layout.js",[],"D:\\Hilo\\hilocare\\src\\app\\components\\Medical\\MedicalCreate\\MedicalCreate.js",[],"D:\\Hilo\\hilocare\\src\\app\\components\\Medical\\MedicalInfo.js",[],"D:\\Hilo\\hilocare\\src\\app\\components\\company\\CompanyCreate\\CompanyCreate.js",["120","121","122"],"import React, {useState, useRef, useContext} from 'react';\r\nimport style from './CompanyCreate.module.css';\r\nimport classes from '../../../App.module.css';\r\nimport {useHistory} from 'react-router-dom';\r\nimport AuthContext from '../../context/auth_context';\r\n\r\nconst CompanyCreate = (props) => {\r\n    //const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const authen = useContext(AuthContext);\r\n    const getToken = authen.token;\r\n    const history = useHistory();\r\n\r\n\r\n    const [enteredTaxCode, setEnteredTaxCode] = useState('');\r\n    const [enteredTaxCodeIsValid, setEnteredTaxCodeIsValid] = useState(false);\r\n    const [enteredTaxCodeIsTouch, setEnteredTaxCodeIsTouch] = useState(false)\r\n\r\n\r\n    const TaxCodeInputChange = (event) => {\r\n        setEnteredTaxCode(event.target.value);\r\n    }\r\n\r\n\r\n    const AddCompany = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"test\");\r\n        setEnteredTaxCodeIsTouch(true);\r\n        if(enteredTaxCode.trim() === ''){\r\n          setEnteredTaxCodeIsValid(false);\r\n          return;\r\n        }\r\n        setEnteredTaxCodeIsValid(true);\r\n        // fetch('https://uathilocare.hilo.com.vn/api/Company/create',\r\n        // {\r\n        //   method: 'POST',\r\n        //   body: JSON.stringify({\r\n        //     name: \"\",\r\n        //     taxCode: \"443\",\r\n        //     phoneNumber:\"4344\",\r\n        //     fax:\"111\",\r\n        //     emailAddress:\"sdsdds\",\r\n        //     cityName: \"sdds\",\r\n        //     wardName: \"sdds\",\r\n        //     districtName:\"dssd\" ,\r\n        //     address: \"sdsd\",\r\n        //     contactEmail: \"rreer\",\r\n        //     contactPhone: \"dsds\",\r\n        //     description: \"dfgfg\"\r\n        //   }),\r\n        //   headers :{\r\n        //     'Content-Type': 'application/json',\r\n        //     'Language' : 'vn',\r\n        //     'Authorization': 'Bearer '+ getToken\r\n        //   }\r\n        // }).then((res) =>{\r\n        //   //setIsLoading(false);\r\n        //   if(res.ok) {\r\n        //     return res.json()\r\n        //   } else {\r\n        //     return res.json().then((data)=>{\r\n        //       let errorMessage = data.message;\r\n        //       throw new Error(errorMessage)\r\n        //     }); \r\n        //   }\r\n        // }).then((data) =>{\r\n        //   if(data.code == \"200\") {\r\n        //     console.log(data)\r\n        //     history.replace('/CompanyList');\r\n        //   }\r\n        //   else{\r\n        //     alert(data.message);\r\n        //   }\r\n        //   //history.replace('/');\r\n        // }).catch((err) =>{\r\n        //   alert(err.message);\r\n        // })\r\n\r\n    }\r\n\r\n    const TaxCodeValid = !enteredTaxCodeIsValid && enteredTaxCodeIsTouch;\r\n    \r\n    return (\r\n        <div className={`${classes.App} ${props.sidebar ==='open'&& classes.active}`} sidebar={props.sidebar}>\r\n            <h3>Tạo công ty</h3>\r\n            <div className={style.wrap}>\r\n            <form className={style.form} onSubmit={AddCompany}>\r\n                <div className={style.control}>\r\n                    <label htmlFor='CompanyName'>Tên công ty </label>\r\n                    <input type='text' id='company-name'  />\r\n                </div>\r\n                <div className={`${style.control} ${TaxCodeValid && style.invalid}`}>\r\n                    <label htmlFor='TaxCode'>Mã số thuế</label>\r\n                    <input type='taxcode' id='taxcode' onChange={TaxCodeInputChange} />\r\n                    {TaxCodeValid && <p className={style.errortext}>TaxCode can not be empty</p>}\r\n                </div>\r\n                <div className={style.control}>\r\n                    <label htmlFor='Fax'>Fax</label>\r\n                    <input type='text' id='fax' />\r\n                </div>\r\n                <div className={style.control}>\r\n                    <label htmlFor='Phone'>Số điện thoại</label>\r\n                    <input type='text' id='phone' />\r\n                </div>\r\n                <div className={style.control}>\r\n                    <label htmlFor='Email'>Email</label>\r\n                    <input type='email' id='email' />\r\n                </div>\r\n                <div className={style.control}>\r\n                    <label htmlFor='City'>Thành phố</label>\r\n                    <input type='text' id='city' />\r\n                </div>\r\n                <div className={style.control}>\r\n                    <label htmlFor='Ward'>Phường</label>\r\n                    <input type='text' id='ward' />\r\n                </div>\r\n                <div className={style.control}>\r\n                    <label htmlFor='District'>Quận</label>\r\n                    <input type='text' id='district' />\r\n                </div>\r\n                <div className={style.control}>\r\n                    <label htmlFor='Address'>Địa chỉ</label>\r\n                    <input type='text' id='address' />\r\n                </div>\r\n                <div className={style.control}>\r\n                    <label htmlFor='ContactEmail'>Email liên hệ</label>\r\n                    <input type='text' id='address' />\r\n                </div>\r\n                <div className={style.control}>\r\n                    <label htmlFor='ContactPhone'>Số điện thoại liên hệ</label>\r\n                    <input type='text' id='address' />\r\n                </div>\r\n                <div className={style.control}>\r\n                    <label htmlFor='Description'>Ghi chú</label>\r\n                    <input type='text' id='description' />\r\n                </div>\r\n                <div className={style.action}>\r\n                    <button>Tạo</button>\r\n                </div>\r\n            </form>  \r\n            </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default CompanyCreate;","D:\\Hilo\\hilocare\\src\\app\\components\\company\\CompanyList.js",["123","124","125","126"],"import React, {useState, useEffect, useContext, useRef, Fragment } from 'react';\r\nimport AuthContext from '../context/auth_context';\r\nimport style from './CompanyList.module.css';\r\nimport classes from '../../App.module.css';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { BsPencilSquare } from 'react-icons/bs';\r\nimport { MdDelete } from 'react-icons/md';\r\n\r\n\r\nconst CompanyList = (props) => {\r\n\r\n    const [companyList, setCompanyList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [httpError, setHttperror] = useState();\r\n\r\n    const MySwal = withReactContent(Swal)\r\n\r\n    const authen = useContext(AuthContext);\r\n    const getToken = authen.token;\r\n\r\n    const [showEditScreen, setShowEditScreen] = useState(false);\r\n\r\n    const showEditScreenHandler = () => {\r\n        setShowEditScreen(true);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchList = async () => {\r\n            const res = await fetch('https://uathilocare.hilo.com.vn/api/Company/getInfo',\r\n            {\r\n              method: 'GET',\r\n              headers :{\r\n                'Language' : 'vn',\r\n                'Authorization': 'Bearer '+ getToken\r\n              }\r\n            });\r\n            if (!res.ok) {\r\n                throw new Error('Đã có lỗi xảy ra')\r\n            }\r\n\r\n            const responseData = await res.json();\r\n            const list = responseData.data;\r\n            \r\n            setCompanyList(list);\r\n            // const userNameList = list.map(item => {\r\n            //     return {\r\n            //         id: item.userName\r\n            //     }\r\n            // });\r\n            // console.log(userNameList);\r\n            setIsLoading(false);\r\n        }\r\n            fetchList().catch(err => {\r\n                setIsLoading(false);\r\n                setHttperror(err.message);\r\n            })\r\n            \r\n    }, []);\r\n\r\n\r\n    const deleteTask = async (id) => {\r\n        console.log(id);\r\n        MySwal.fire({\r\n            title: 'Bạn có chắn chắn muốn xóa công ty này?',\r\n            showDenyButton: false,\r\n            showCancelButton: true,\r\n            confirmButtonText: `Xóa`,\r\n          }).then( async (result) => {\r\n            if (result.isConfirmed) {\r\n                const res = await fetch('https://uathilocare.hilo.com.vn/api/Company/delete',\r\n                    {\r\n                    method: 'DELETE',\r\n                    body: JSON.stringify({\r\n                        id: id\r\n                    }),\r\n                    headers :{\r\n                        'Content-Type': 'application/json',\r\n                        'Language' : 'vn',\r\n                        'Authorization': 'Bearer '+ getToken\r\n                    }\r\n                    })\r\n                    const deleteResponseData = await res.json();\r\n                    deleteResponseData.code === 200 ? MySwal.fire('Công ty đã được xóa!', '', 'success') : MySwal.fire('Đã có lỗi xảy ra khi xóa công ty', '', 'info');\r\n                setCompanyList(companyList.filter((item) => item.userId !== id))\r\n            } \r\n          })\r\n      }\r\n\r\n    if(isLoading){\r\n        return(\r\n            <section className={style.loading}>\r\n                <p>Is loading...</p>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    if(httpError){\r\n        return(\r\n            <section className={style.loading}>\r\n                <p>{httpError}</p>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <main className={`${classes.App} ${props.sidebar ==='open'&& classes.active}`} sidebar={props.sidebar}>\r\n            <section>\r\n                <h1>Danh sách Công ty</h1>\r\n                    <table className={style.table}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Tên công ty</th>\r\n                        <th>Mã số thuế</th>\r\n                        <th>Số điện thoại</th>\r\n                        <th>Số điện thoại liên hệ</th>\r\n                        <th>Email</th>\r\n                        <th>Email liên hệ</th>\r\n                        <th>Fax</th>\r\n                        <th>Địa chỉ</th>\r\n                        <th>Sửa</th>\r\n                        <th>Xóa</th>\r\n                        <th>Ghi chú</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {companyList.map((com, index) => (\r\n                            <tr key={com.id}>\r\n                                <th>{index + 1}</th>\r\n                                <td>{com.name}</td>\r\n                                <td>{com.taxCode}</td>\r\n                                <td>{com.phone}</td>\r\n                                <td>{com.contactPhone}</td>\r\n                                <td>{com.email}</td>    \r\n                                <td>{com.contactEmail}</td>\r\n                                <td>{com.fax}</td>\r\n                                <td>{com.address}</td>\r\n                                <td>{com.description}</td>\r\n                                <td><BsPencilSquare className={style.click} onClick={showEditScreenHandler}/></td>\r\n                                <td><MdDelete className={style.click} onClick={() => deleteTask(com.userId)}/></td>\r\n                            </tr>\r\n                    ))}\r\n                    </tbody>\r\n                    </table>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default CompanyList;","D:\\Hilo\\hilocare\\src\\app\\components\\Permission\\Permission.js",["127"],"import classes from '../../App.module.css';\r\n\r\nconst Permission = (props) => {\r\n  return (\r\n    <main className={`${classes.App} ${props.sidebar=='open' && classes.active}`} sidebar={props.sidebar}>\r\n      {props.children}\r\n      <h1>Permission</h1>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Permission;","D:\\Hilo\\hilocare\\src\\app\\components\\ExaminationSchedule\\ScheduleList.js",["128"],"import classes from '../../App.module.css';\r\n\r\nconst ScheduleList = (props) => {\r\n  return (\r\n    <main className={`${classes.App} ${props.sidebar == 'open' && classes.active}`} sidebar={props.sidebar}>\r\n      {props.children}\r\n      <h1>ScheduleList</h1>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ScheduleList;","D:\\Hilo\\hilocare\\src\\app\\components\\account\\AccountList\\AccountList.js",["129","130","131","132","133"],"import React, {useState, useEffect, useContext, useRef } from 'react';\r\nimport style from './AccountList.module.css';\r\nimport classes from '../../../App.module.css';\r\nimport AuthContext from '../../context/auth_context';\r\nimport AccountTable from './AccountTable';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\n\r\nconst AccountList = (props) => {\r\n    const [accountList, setAccountList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [httpError, setHttperror] = useState();\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [linesPerPage, setLinesPerPage] = useState(10);\r\n\r\n    const MySwal = withReactContent(Swal)\r\n\r\n    const authen = useContext(AuthContext);\r\n    const getToken = authen.token;\r\n\r\n    useEffect(() => {\r\n        const fetchList = async () => {\r\n            const res = await fetch('https://uathilocare.hilo.com.vn/api/Account/getAccount',\r\n            {\r\n              method: 'GET',\r\n              headers :{\r\n                'Language' : 'vn',\r\n                'Authorization': 'Bearer '+ getToken\r\n              }\r\n            });\r\n            if (!res.ok) {\r\n                throw new Error('Đã có lỗi xảy ra')\r\n            }\r\n\r\n            const responseData = await res.json();\r\n            const list = responseData.data;\r\n            \r\n            setAccountList(list);\r\n            // const userNameList = list.map(item => {\r\n            //     return {\r\n            //         id: item.userName\r\n            //     }\r\n            // });\r\n            // console.log(userNameList);\r\n            setIsLoading(false);\r\n        }\r\n            fetchList().catch(err => {\r\n                setIsLoading(false);\r\n                setHttperror(err.message);\r\n            })\r\n            \r\n    }, [])\r\n\r\n\r\n    const deleteTask = async (id) => {\r\n        console.log(id);\r\n        MySwal.fire({\r\n            title: 'Bạn có chắn chắn muốn xóa tài khoản này?',\r\n            showDenyButton: false,\r\n            showCancelButton: true,\r\n            confirmButtonText: `Xóa`,\r\n          }).then( async (result) => {\r\n            if (result.isConfirmed) {\r\n                const res = await fetch('https://uathilocare.hilo.com.vn/api/Account/delete',\r\n                    {\r\n                    method: 'DELETE',\r\n                    body: JSON.stringify({\r\n                        id: id\r\n                    }),\r\n                    headers :{\r\n                        'Content-Type': 'application/json',\r\n                        'Language' : 'vn',\r\n                        'Authorization': 'Bearer '+ getToken\r\n                    }\r\n                    })\r\n                    const deleteResponseData = await res.json();\r\n                    deleteResponseData.code === 200 ? MySwal.fire('Tài khoản đã được xóa!', '', 'success') : MySwal.fire('Đã có lỗi xảy ra khi xóa tài khoản', '', 'info');\r\n                setAccountList(accountList.filter((item) => item.userId !== id))\r\n            } \r\n          })\r\n      }\r\n    const userNameRef = useRef();\r\n\r\n    const ChangeFilter = (event) => {\r\n        \r\n        event.preventDefault();\r\n        \r\n        const enteredUserName = userNameRef.current.value;\r\n        console.log(enteredUserName);\r\n        setAccountList(accountList.filter((item => {\r\n            return item.userName === enteredUserName;\r\n        })))\r\n    }\r\n    \r\n    return (\r\n        <main className={`${classes.App} ${props.sidebar ==='open'&& classes.active}`} sidebar={props.sidebar}>\r\n            \r\n            <form className={style.search} onSubmit={ChangeFilter}>\r\n                <div className={style.searchform}>\r\n                    <div className={style.searchcontrol}> \r\n                        <label>Ten tài khoản</label>\r\n                        <input type='text' name=\"username\" ref={userNameRef}/>\r\n                    </div>\r\n                    <div className={style.searchcontrol}>\r\n                        <label>Tên người dùng</label>\r\n                        <input type='text' name=\"fullname\"/>\r\n                    </div>\r\n                    <div className={style.searchcontrol}>\r\n                        <label>Email</label>\r\n                        <input type='text' name=\"email\" />\r\n                    </div>\r\n                    <div className={style.searchcontrol}> \r\n                        <label>Số điện thoại</label>\r\n                        <input type='text' name=\"phone\" />\r\n                    </div>\r\n                    <div className={style.searchcontrol}> \r\n                        <label>Giới tính</label>\r\n                        <select name=\"gender\" id=\"gender\">\r\n                        <option value=\"men\">Nam</option>\r\n                        <option value=\"women\">Nữ</option>\r\n                    </select>\r\n                    </div>\r\n                    <div className={style.searchcontrol}> \r\n                        <label>Tình trạng hôn nhân</label>\r\n                        <select name=\"marriageStatus\" id=\"marriageStatus\">\r\n                        <option value=\"married\">Đã kết hôn</option>\r\n                        <option value=\"single\">Độc thân</option>\r\n                    </select>\r\n                    </div>\r\n                </div>\r\n                <div className={style.searchbutton}>\r\n                    <button type=\"submit\">Tìm tài khoản</button>\r\n                </div>\r\n            </form>\r\n            <AccountTable accountList={accountList} isLoading={isLoading} httpError={httpError} deleteTask={deleteTask}/>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default AccountList;\r\n\r\n// index={index}\r\n// key={acc.userId}\r\n// username={acc.username}\r\n// phone={acc.phone}\r\n// email={acc.email} ","D:\\Hilo\\hilocare\\src\\app\\components\\account\\AccountInfo\\AccountInfo.js",["134"],"import React, {useState, useEffect, useContext } from 'react';\r\nimport classes from '../../../App.module.css';\r\nimport AuthContext from '../../context/auth_context';\r\nimport style from '../AccountList/AccountList.module.css';\r\n\r\nconst AccountInfo = (props) => {\r\n    const [accountInfo, setAccountInfo] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [httpError, setHttperror] = useState();\r\n\r\n    const authen = useContext(AuthContext);\r\n    const getToken = authen.token;\r\n\r\n    useEffect(() => {\r\n        const fetchList = async () => {\r\n            const res = await fetch('https://uathilocare.hilo.com.vn/api/Account/getInfoSelf',\r\n            {\r\n              method: 'GET',\r\n              headers :{\r\n                'Language' : 'vn',\r\n                'Authorization': 'Bearer '+ getToken\r\n              }\r\n            });\r\n            if (!res.ok) {\r\n                throw new Error('Đã có lỗi xảy ra')\r\n            }\r\n\r\n            const responseData = await res.json();\r\n            const list = responseData.data;\r\n            console.log(list);\r\n            setAccountInfo(list);\r\n            setIsLoading(false);\r\n        }\r\n            fetchList().catch(err => {\r\n                setIsLoading(false);\r\n                setHttperror(err.message);\r\n            })\r\n            \r\n    }, [])\r\n\r\n    if(isLoading){\r\n        return(\r\n            <section className={style.loading}>\r\n                <p>Is loading...</p>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    if(httpError){\r\n        return(\r\n            <section className={style.loading}>\r\n                <p>{httpError}</p>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <main className={`${classes.App} ${props.sidebar ==='open' && classes.active}`} sidebar={props.sidebar}>\r\n            {props.children}\r\n            <h1>AccountInfo</h1>\r\n            <p>{accountInfo.userName}</p>\r\n            <p>{accountInfo.fullName}</p>\r\n            <p>{accountInfo.email}</p>\r\n            <p>{accountInfo.phone}</p>    \r\n            <p>{accountInfo.gender.name}</p>\r\n            <p>{accountInfo.maritalStatus.name}</p>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default AccountInfo;","D:\\Hilo\\hilocare\\src\\app\\components\\account\\AccountList\\AccountChangeForm\\AccountInfoChange.js",["135","136","137","138","139"],"import React, {useState, useEffect, useContext, Fragment } from 'react';\r\nimport reactDom from 'react-dom';\r\nimport classes from '../../../../App.module.css';\r\nimport AuthContext from '../../../context/auth_context';\r\nimport style from './AccountInfoChange.module.css';\r\n\r\n\r\nconst Backdrop = props => {\r\n    return <div className={style.backdrop} />\r\n}\r\n\r\nconst ModalOverlay = props => {\r\n    return  <div className={style.modal}>\r\n                <div className={style.content}>{props.children}</div>\r\n            </div>\r\n}\r\nconst portalElement = document.getElementById('overlay')\r\n\r\nconst AccountInfoChange = (props) => {\r\n\r\n\r\n    \r\n\r\n    return ( \r\n        <Fragment>\r\n            {reactDom.createPortal(<Backdrop/>, portalElement)}\r\n            {reactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalElement)}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AccountInfoChange;","D:\\Hilo\\hilocare\\src\\app\\components\\Layout\\MainNavigation.js",["140","141","142"],"import { Link } from 'react-router-dom';\r\nimport {useContext, useState} from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport {AiFillCaretLeft} from 'react-icons/ai';\r\nimport {SidebarData} from'./SidebarData'\r\nimport classes from './MainNavigation.module.css';\r\nimport AuthContext from '../context/auth_context';\r\nimport SubMenu from './SubMenu';\r\n\r\nconst MainNavigation = (props) => {\r\n  // const [sidebar, setSidebar] = useState(false);\r\n  // const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  const authen = useContext(AuthContext);\r\n  const isLoggedIn = authen.isLoggedIn;\r\n\r\n  const LogoutHandler = () => {\r\n    authen.logout();\r\n  }\r\n  return (\r\n    <header className={classes.header}>\r\n      <Link to='#' className={classes.sidebaricon} >\r\n        <FaIcons.FaBars  onClick={props.openclick} />\r\n      </Link>\r\n      <Link to='/'>\r\n        <div className={classes.logo}>Hilocare</div>\r\n      </Link>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to='/Profile'>Đổi mật khẩu</Link>\r\n          </li>\r\n          <li>\r\n            <button onClick={LogoutHandler}>Đăng xuất</button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <nav className={`${classes.sidebarnav} ${props.sidebar=='open' ? classes.active : null}`} sidebar={props.sidebar}>\r\n        <div className={classes.sidebarwrap}>\r\n          <Link className={classes.sidebaricon} to='#'>\r\n            <AiFillCaretLeft  onClick={props.hideclick} />\r\n          </Link>\r\n          {SidebarData.map((item, index) => {\r\n              return <SubMenu item={item} key={index} />;\r\n            })}\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","D:\\Hilo\\hilocare\\src\\app\\components\\profile\\ProfileForm.js",["143"],"import classes from './ProfileForm.module.css';\r\nimport {useRef, useContext}  from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport AuthContext from '../context/auth_context';\r\n\r\n\r\nconst ProfileForm = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const authen = useContext(AuthContext);\r\n    const oldPasswordInputRef = useRef();\r\n    const newPasswordInputRef = useRef();\r\n    const newConfirmPasswordInputRef = useRef();\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault();\r\n        const oldPassword = oldPasswordInputRef.current.value;\r\n        const newPassword = newPasswordInputRef.current.value;\r\n        const newConfirmPassword = newConfirmPasswordInputRef.current.value;\r\n        fetch('https://uathilocare.hilo.com.vn/api/Account/updatePasswordSelf',{\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                passwordOld: oldPassword,\r\n                password: newPassword,\r\n                passwordConfirm: newConfirmPassword,\r\n                id: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\r\n            }),\r\n            headers :{\r\n              'Content-Type': 'application/json'\r\n            }\r\n        }).then((res) =>{\r\n            //setIsLoading(false);\r\n            if(res.ok) {\r\n              return res.json()\r\n            } else {\r\n              return res.json().then((data)=>{\r\n                console.log(data);\r\n                let errorMessage = data.message;\r\n                //alert(errorMessage);\r\n                throw new Error(errorMessage)\r\n              }); \r\n            }\r\n          }).then((data) =>{\r\n            console.log(data);\r\n            authen.login(data.token);\r\n            history.replace('/');\r\n          }).catch((err) =>{\r\n            alert(err.message);\r\n          })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.form}>\r\n            <div className={classes.control}>\r\n                <label htmlFor='old-password'>Nhập mật khẩu cũ</label>\r\n                <input type='password' id='old-password' ref={oldPasswordInputRef} />\r\n            </div>\r\n            <div className={classes.control}>\r\n                <label htmlFor='new-password'>Mật khẩu mới</label>\r\n                <input type='password' id='new-password' ref={newPasswordInputRef} />\r\n            </div>\r\n            <div className={classes.control}>\r\n                <label htmlFor='new-password'>Nhập lại mật khẩu</label>\r\n                <input type='password' id='new-password' ref={newConfirmPasswordInputRef} />\r\n            </div>\r\n            <div className={classes.action}>\r\n                <button>Đổi mật khẩu</button>\r\n            </div>\r\n        </form>\r\n    );\r\n} \r\n\r\nexport default ProfileForm;","D:\\Hilo\\hilocare\\src\\app\\components\\account\\AccountList\\AccountTable.js",["144","145","146"],"import React, {useState, useEffect, Fragment} from 'react';\r\nimport AuthContext from '../../context/auth_context';\r\nimport style from './AccountList.module.css';\r\nimport { MdDelete } from 'react-icons/md';\r\nimport { BsPencilSquare } from 'react-icons/bs';\r\nimport { Link } from 'react-router-dom';\r\nimport AccountChangeForm from './AccountChangeForm/AccountChangeForm';\r\n\r\nconst Account = (props) => {\r\n    const [showEditScreen, setShowEditScreen] = useState(false);\r\n\r\n    const showEditScreenHandler = () => {\r\n        setShowEditScreen(true);\r\n    }\r\n\r\n    const hideEditScreenHandler = () => {\r\n        setShowEditScreen(false);\r\n    }\r\n\r\n    if(props.isLoading){\r\n        return(\r\n            <section className={style.loading}>\r\n                <p>Is loading...</p>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    if(props.httpError){\r\n        return(\r\n            <section className={style.loading}>\r\n                <p>{props.httpError}</p>\r\n            </section>\r\n        )\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {showEditScreen && <AccountChangeForm CancelForm={hideEditScreenHandler}/>}\r\n            <section>\r\n                <h1>Danh sách tài khoản</h1>\r\n                    <table className={style.table}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Tên tài khoản</th>\r\n                        <th>Tên người dùng</th>\r\n                        <th>Email</th>\r\n                        <th>Điện thoại</th>\r\n                        <th>Giới tính</th>\r\n                        <th>Tình trạng hôn nhân</th>\r\n                        <th>Sửa</th>\r\n                        <th>Xóa</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {props.accountList.map((acc, index) => (\r\n                            <tr key={acc.userId}>\r\n                                <th>{index + 1}</th>\r\n                                <td>{acc.userName}</td>\r\n                                <td>{acc.fullName}</td>\r\n                                <td>{acc.email}</td>\r\n                                <td>{acc.phone}</td>    \r\n                                <td>{acc.gender.name}</td>\r\n                                <td>{acc.maritalStatus.name}</td>\r\n                                <td><BsPencilSquare className={style.click} onClick={showEditScreenHandler}/></td>\r\n                                <td><MdDelete className={style.click} onClick={() => props.deleteTask(acc.userId)}/></td>\r\n                            </tr>\r\n                    ))}\r\n                    </tbody>\r\n                    </table>\r\n            </section>\r\n        </Fragment>\r\n      );\r\n}\r\n\r\nexport default Account;","D:\\Hilo\\hilocare\\src\\app\\components\\Layout\\SidebarData.js",[],"D:\\Hilo\\hilocare\\src\\app\\components\\Layout\\SubMenu.js",["147"],"import classes from './MainNavigation.module.css';\r\nimport React, {useContext, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SubMenu = ({ item }) => {\r\n    const [subnav, setSubnav] = useState(false); \r\n    const showSubnav = () => setSubnav(!subnav);\r\n    return (\r\n      <>\r\n        <Link className={classes.sidebarlink} to={item.path || '#'} onClick={item.subNav && showSubnav}>\r\n          <div>\r\n            {item.icon}\r\n            <label className={classes.sidebarlabel}>{item.title}</label>\r\n          </div>\r\n          <div>\r\n            {item.subNav && subnav\r\n              ? item.iconOpen\r\n              : item.subNav\r\n              ? item.iconClose\r\n              : null}\r\n          </div>\r\n        </Link>\r\n        {subnav &&\r\n          item.subNav.map((item, index) => {\r\n            return (\r\n              <Link to={item.path || '#'} key={index} className={classes.dropdownlink}>\r\n                {item.icon}\r\n                <label className={classes.sidebarlabel}>{item.title}</label>\r\n              </Link>\r\n            );\r\n          })}\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default SubMenu;","D:\\Hilo\\hilocare\\src\\app\\components\\account\\AccountList\\AccountChangeForm\\AccountChangeForm.js",["148","149","150","151"],"import React, {useState, useEffect, useContext, Fragment } from 'react';\r\nimport style from './AccountChangeForm.module.css';\r\nimport AccountInfoChange from './AccountInfoChange';\r\n\r\nconst AccountChangeForm = (props) => {\r\n    // const [accountInfo, setAccountInfo] = useState([]);\r\n    // const [isLoading, setIsLoading] = useState(true);\r\n    // const [httpError, setHttperror] = useState();\r\n    // const authen = useContext(AuthContext);\r\n    // const getToken = authen.token;\r\n\r\n    // useEffect(() => {\r\n    //     const fetchList = async () => {\r\n    //         const res = await fetch(`https://uathilocare.hilo.com.vn/api/Account/getInfo?Id=${props.userid}`,\r\n    //         {\r\n    //           method: 'GET',\r\n    //           headers :{\r\n    //             'Language' : 'vn',\r\n    //             'Authorization': 'Bearer '+ getToken\r\n    //           }\r\n    //         });\r\n    //         if (!res.ok) {\r\n    //             throw new Error('Đã có lỗi xảy ra')\r\n    //         }\r\n\r\n    //         const responseData = await res.json();\r\n    //         const list = responseData.data;\r\n    //         console.log(list);\r\n    //         setAccountInfo(list);\r\n    //         setIsLoading(false);\r\n    //     }\r\n    //         fetchList().catch(err => {\r\n    //             setIsLoading(false);\r\n    //             setHttperror(err.message);\r\n    //         })\r\n            \r\n    // }, [])\r\n\r\n\r\n    return ( \r\n    <AccountInfoChange>\r\n        <div>\r\n        <div className={style.searchcontrol}>\r\n            <label htmlFor='text'>Tên tài khoản</label>\r\n            <input type='text' id='text'/>\r\n            </div>\r\n        <div className={style.searchcontrol}>\r\n            <label htmlFor='text'>Tên người dùng</label>\r\n            <input type='text' id='text'/>\r\n        </div>\r\n        <div className={style.searchcontrol}>\r\n            <label htmlFor='text'>Email</label>\r\n            <input type='text' id='text'/>\r\n        </div>\r\n        <div className={style.searchcontrol}>\r\n            <label htmlFor='text'>Số điện thoại</label>\r\n            <input type='text' id='text'/>\r\n        </div>\r\n        <div className={style.searchcontrol}> \r\n            <label>Giới tính</label>\r\n                <select name=\"gender\" id=\"gender\">\r\n                    <option value=\"men\">Nam</option>\r\n                    <option value=\"women\">Nữ</option>\r\n                </select>\r\n            </div>\r\n        <div className={style.searchcontrol}> \r\n            <label>Tình trạng hôn nhân</label>\r\n                <select name=\"marriageStatus\" id=\"marriageStatus\">\r\n                    <option value=\"married\">Đã kết hôn</option>\r\n                    <option value=\"single\">Độc thân</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div className={style.actions}>\r\n            <button className={style['button--alt']}  onClick={props.CancelForm}>Close</button>\r\n            <button className={style.button}>Save</button>\r\n        </div>\r\n    </AccountInfoChange>\r\n    );\r\n}\r\n\r\nexport default AccountChangeForm;",{"ruleId":"152","severity":1,"message":"153","line":7,"column":8,"nodeType":"154","messageId":"155","endLine":7,"endColumn":19},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"152","severity":1,"message":"160","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":15},{"ruleId":"152","severity":1,"message":"161","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":14},{"ruleId":"152","severity":1,"message":"162","line":2,"column":35,"nodeType":"154","messageId":"155","endLine":2,"endColumn":44},{"ruleId":"152","severity":1,"message":"163","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":52,"column":24,"nodeType":"166","messageId":"167","endLine":52,"endColumn":26},{"ruleId":"164","severity":1,"message":"165","line":88,"column":24,"nodeType":"166","messageId":"167","endLine":88,"endColumn":26},{"ruleId":"152","severity":1,"message":"168","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":32},{"ruleId":"152","severity":1,"message":"169","line":11,"column":11,"nodeType":"154","messageId":"155","endLine":11,"endColumn":19},{"ruleId":"152","severity":1,"message":"170","line":12,"column":11,"nodeType":"154","messageId":"155","endLine":12,"endColumn":18},{"ruleId":"152","severity":1,"message":"168","line":1,"column":49,"nodeType":"154","messageId":"155","endLine":1,"endColumn":55},{"ruleId":"152","severity":1,"message":"171","line":1,"column":57,"nodeType":"154","messageId":"155","endLine":1,"endColumn":65},{"ruleId":"152","severity":1,"message":"172","line":22,"column":12,"nodeType":"154","messageId":"155","endLine":22,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":60,"column":8,"nodeType":"175","endLine":60,"endColumn":10,"suggestions":"176"},{"ruleId":"164","severity":1,"message":"165","line":5,"column":53,"nodeType":"166","messageId":"167","endLine":5,"endColumn":55},{"ruleId":"164","severity":1,"message":"165","line":5,"column":54,"nodeType":"166","messageId":"167","endLine":5,"endColumn":56},{"ruleId":"152","severity":1,"message":"177","line":16,"column":12,"nodeType":"154","messageId":"155","endLine":16,"endColumn":23},{"ruleId":"152","severity":1,"message":"178","line":16,"column":25,"nodeType":"154","messageId":"155","endLine":16,"endColumn":39},{"ruleId":"152","severity":1,"message":"179","line":17,"column":12,"nodeType":"154","messageId":"155","endLine":17,"endColumn":24},{"ruleId":"152","severity":1,"message":"180","line":17,"column":26,"nodeType":"154","messageId":"155","endLine":17,"endColumn":41},{"ruleId":"173","severity":1,"message":"174","line":55,"column":8,"nodeType":"175","endLine":55,"endColumn":10,"suggestions":"181"},{"ruleId":"173","severity":1,"message":"174","line":39,"column":8,"nodeType":"175","endLine":39,"endColumn":10,"suggestions":"182"},{"ruleId":"152","severity":1,"message":"183","line":1,"column":16,"nodeType":"154","messageId":"155","endLine":1,"endColumn":24},{"ruleId":"152","severity":1,"message":"162","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":35},{"ruleId":"152","severity":1,"message":"184","line":1,"column":37,"nodeType":"154","messageId":"155","endLine":1,"endColumn":47},{"ruleId":"152","severity":1,"message":"160","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":19},{"ruleId":"152","severity":1,"message":"183","line":2,"column":21,"nodeType":"154","messageId":"155","endLine":2,"endColumn":29},{"ruleId":"152","severity":1,"message":"185","line":15,"column":9,"nodeType":"154","messageId":"155","endLine":15,"endColumn":19},{"ruleId":"164","severity":1,"message":"165","line":38,"column":61,"nodeType":"166","messageId":"167","endLine":38,"endColumn":63},{"ruleId":"152","severity":1,"message":"186","line":15,"column":11,"nodeType":"154","messageId":"155","endLine":15,"endColumn":24},{"ruleId":"152","severity":1,"message":"162","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":35},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":19},{"ruleId":"152","severity":1,"message":"187","line":6,"column":10,"nodeType":"154","messageId":"155","endLine":6,"endColumn":14},{"ruleId":"152","severity":1,"message":"184","line":2,"column":16,"nodeType":"154","messageId":"155","endLine":2,"endColumn":26},{"ruleId":"152","severity":1,"message":"183","line":1,"column":16,"nodeType":"154","messageId":"155","endLine":1,"endColumn":24},{"ruleId":"152","severity":1,"message":"162","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":35},{"ruleId":"152","severity":1,"message":"184","line":1,"column":37,"nodeType":"154","messageId":"155","endLine":1,"endColumn":47},{"ruleId":"152","severity":1,"message":"171","line":1,"column":49,"nodeType":"154","messageId":"155","endLine":1,"endColumn":57},"no-unused-vars","'AuthContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["188"],"no-negated-in-lhs",["189"],"'classes' is defined but never used.","'Layout' is defined but never used.","'useEffect' is defined but never used.","'classes2' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'getToken' is assigned a value but never used.","'history' is assigned a value but never used.","'Fragment' is defined but never used.","'showEditScreen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.","ArrayExpression",["190"],"'currentPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'linesPerPage' is assigned a value but never used.","'setLinesPerPage' is assigned a value but never used.",["191"],["192"],"'useState' is defined but never used.","'useContext' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"193","fix":"195"},{"desc":"193","fix":"196"},"Update the dependencies array to be: [getToken]",{"range":"197","text":"198"},{"range":"199","text":"198"},{"range":"200","text":"198"},[1912,1914],"[getToken]",[1822,1824],[1332,1334]]